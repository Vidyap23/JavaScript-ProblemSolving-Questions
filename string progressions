//Progression 1
let reverseString=(str)=> {
    return str.split("").reverse().join("");  //split string into array, reverse and join them back
}
console.log(reverseString("hello world")) //test



//Progression 2
let anagrams=(stringA, stringB)=>{
        /*First, we remove any non-alphabet character using regex and convert       
        convert the strings to lowercase. */
        stringA = stringA.replace(/[^\w]/g, '').toLowerCase()
        stringB = stringB.replace(/[^\w]/g, '').toLowerCase()

        return sortString(stringA) === sortString(stringB)  //sorted strings are compared
    }

    /*This function sorts the strings*/ 
   let  sortString=(string)=>{
        return string.split('').sort().join('');
    }
console.log(anagrams("bananas","ananabs")) //test





//Progression 3
  let checkPalindrome=(str)=>{
    var str = str.replace(/[^a-zA-Z0-9]+/gi, '').toLowerCase();  //remove all characters apart from alphabets, convert to lowercase
    return str == str.split('').reverse().join('');
}
console.log(checkPalindrome("maam"))




//Progression 4
let isomorphic=(str1, str2)=>{
        if(str1.length !== str2.length) return false;  //lengths different, then strings cant be isomporphic
        var map1={}, map2={}; //two maps

        for (var i=0; i< str1.length;i++) {
            if (typeof map1[str1[i]] == "undefined" && typeof map2[str2[i]] == "undefined"){
                map1[str1[i]] = str2[i];
                map2[str2[i]] = str1[i]; //map both strings
            }
            else{
                if(map1[str1[i]] !== str2[i] && map2[str2[i]] !== str1[i]){ //check if they map to unique element
                    return false;
                }
            }
        }
        return true;
    }
    
    console.log(isomorphic("kitkat","vervqr"))  //test
